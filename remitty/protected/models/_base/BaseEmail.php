<?php

/**
 * Company: Yee Technologies Pvt. Ltd. < www.yeetechnologies.com >
 * Author : Praveen Shivhare < praveen.tuffgeekers@gmail.com >
 */
 
/**
 * This is the model base class for the table "{{email}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Email".
 *
 * Columns in table "{{email}}" available as properties of the model,
 * followed by relations of table "{{email}}" available as properties of the model.
 *
 * @property integer $id
 * @property integer $sender_id
 * @property string $to_email
 * @property string $from_email
 * @property string $subject
 * @property string $message
 * @property string $date_created
 * @property string $date_modified
 * @property integer $created_by
 * @property integer $updated_by
 * @property integer $type_id
 *
 * @property Lookup $type
 */
abstract class BaseEmail extends GxActiveRecord {

	public static function getTypeOptions($id = null)
	{
		$list = array("TYPE1","TYPE2","TYPE3");
		if ($id == null )	return $list;
		if ( is_numeric( $id )) return $list [ $id ];
		return $id;
	}
 
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{email}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Email|Emails', $n);
	}

	public static function representingColumn() {
		return 'to_email';
	}

	public function rules() {
		return array(
			array('sender_id, created_by, updated_by, type_id', 'numerical', 'integerOnly'=>true),
			array('to_email, from_email', 'length', 'max'=>45),
			array('subject, message, date_created, date_modified', 'safe'),
			array('sender_id, to_email, from_email, subject, message, date_created, date_modified, created_by, updated_by, type_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, sender_id, to_email, from_email, subject, message, date_created, date_modified, created_by, updated_by, type_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'type' => array(self::BELONGS_TO, 'Lookup', 'type_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'sender_id' => Yii::t('app', 'Sender'),
			'to_email' => Yii::t('app', 'To Email'),
			'from_email' => Yii::t('app', 'From Email'),
			'subject' => Yii::t('app', 'Subject'),
			'message' => Yii::t('app', 'Message'),
			'date_created' => Yii::t('app', 'Date Created'),
			'date_modified' => Yii::t('app', 'Date Modified'),
			'created_by' => Yii::t('app', 'Created By'),
			'updated_by' => Yii::t('app', 'Updated By'),
			'type_id' => null,
			'type' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('sender_id', $this->sender_id);
		$criteria->compare('to_email', $this->to_email, true);
		$criteria->compare('from_email', $this->from_email, true);
		$criteria->compare('subject', $this->subject, true);
		$criteria->compare('message', $this->message, true);
		$criteria->compare('date_created', $this->date_created, true);
		$criteria->compare('date_modified', $this->date_modified, true);
		$criteria->compare('created_by', $this->created_by);
		$criteria->compare('updated_by', $this->updated_by);
		$criteria->compare('type_id', $this->type_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}