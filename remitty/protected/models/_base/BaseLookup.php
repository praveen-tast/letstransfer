<?php

/**
 * Company: Yee Technologies Pvt. Ltd. < www.yeetechnologies.com >
 * Author : Praveen Shivhare < praveen.tuffgeekers@gmail.com >
 */
 
/**
 * This is the model base class for the table "{{lookup}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Lookup".
 *
 * Columns in table "{{lookup}}" available as properties of the model,
 * followed by relations of table "{{lookup}}" available as properties of the model.
 *
 * @property integer $id
 * @property string $code
 * @property string $value
 * @property string $description
 *
 * @property CountryPayment[] $countryPayments
 * @property CountryPayment[] $countryPayments1
 * @property Email[] $emails
 * @property Transaction[] $transactions
 * @property TransactionLog[] $transactionLogs
 * @property User[] $users
 */
abstract class BaseLookup extends GxActiveRecord {


	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{lookup}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Lookup|Lookups', $n);
	}

	public static function representingColumn() {
		return 'code';
	}

	public function rules() {
		return array(
			array('code, value', 'required'),
			array('code, value, description', 'length', 'max'=>45),
			array('description', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, code, value, description', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'countryPayments' => array(self::HAS_MANY, 'CountryPayment', 'status_id'),
			'countryPayments1' => array(self::HAS_MANY, 'CountryPayment', 'payment_id'),
			'emails' => array(self::HAS_MANY, 'Email', 'type_id'),
			'transactions' => array(self::HAS_MANY, 'Transaction', 'status_id'),
			'transactionLogs' => array(self::HAS_MANY, 'TransactionLog', 'transaction_status_id'),
			'users' => array(self::HAS_MANY, 'User', 'status_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'code' => Yii::t('app', 'Code'),
			'value' => Yii::t('app', 'Value'),
			'description' => Yii::t('app', 'Description'),
			'countryPayments' => null,
			'countryPayments1' => null,
			'emails' => null,
			'transactions' => null,
			'transactionLogs' => null,
			'users' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('code', $this->code, true);
		$criteria->compare('value', $this->value, true);
		$criteria->compare('description', $this->description, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}